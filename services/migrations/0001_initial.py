# Generated by Django 5.1.5 on 2025-02-07 22:21

import django.db.models.deletion
import services.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                ("company_id", models.AutoField(primary_key=True, serialize=False)),
                ("company_name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True)),
                ("address", models.CharField(max_length=255)),
                ("phone_number", models.CharField(max_length=15)),
                ("email", models.EmailField(max_length=254)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "companies",
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                ("department_id", models.AutoField(primary_key=True, serialize=False)),
                ("department_name", models.CharField(max_length=50)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "departments",
            },
        ),
        migrations.CreateModel(
            name="TenderCategory",
            fields=[
                ("category_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "tender_categories",
                "db_table": "tender_categories",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(max_length=255)),
                ("role", models.CharField(max_length=20)),
                ("phone_number", models.CharField(max_length=15)),
                ("address", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "email_verification_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="custom_user_set",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="custom_user_set",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="services.company",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="services.department",
                    ),
                ),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                ("log_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Create"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("approve", "Approve"),
                            ("submit", "Submit"),
                        ],
                        max_length=20,
                    ),
                ),
                ("target_model", models.CharField(max_length=50)),
                ("target_id", models.IntegerField()),
                ("details", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "audit_logs",
            },
        ),
        migrations.CreateModel(
            name="CV",
            fields=[
                ("cv_id", models.AutoField(primary_key=True, serialize=False)),
                ("file", models.FileField(upload_to="uploads/cvs/")),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cv",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "cvs",
            },
        ),
        migrations.CreateModel(
            name="Tender",
            fields=[
                ("tender_id", models.AutoField(primary_key=True, serialize=False)),
                ("tender_name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("reference_number", models.CharField(max_length=50, unique=True)),
                (
                    "budget",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("deadline", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            (
                                "pending_superuser_approval",
                                "Pending Superuser Approval",
                            ),
                            ("rejected_by_superuser", "Rejected by Superuser"),
                            (
                                "pending_manager_assignment",
                                "Pending Manager Assignment",
                            ),
                            ("in_progress", "In Progress"),
                            ("pending_final_approval", "Pending Final Approval"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("closed", "Closed"),
                        ],
                        default="draft",
                        max_length=30,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="services.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenders_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "required_department",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="services.department",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="services.tendercategory",
                    ),
                ),
            ],
            options={
                "db_table": "tenders",
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                ("document_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("notice", "Tender Notice"),
                            ("spec", "Specification Document"),
                            ("bid", "Bid Document"),
                            ("contract", "Contract"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "file",
                    models.FileField(upload_to=services.models.document_upload_path),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uploader",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="services.tender",
                    ),
                ),
            ],
            options={
                "db_table": "documents",
            },
        ),
        migrations.CreateModel(
            name="ChecklistItem",
            fields=[
                ("checklist_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("overdue", "Overdue"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("deadline", models.DateTimeField()),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "document",
                    models.FileField(
                        blank=True, null=True, upload_to="checklist_documents/"
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="checklist_items",
                        to="services.tender",
                    ),
                ),
            ],
            options={
                "db_table": "checklist_items",
            },
        ),
        migrations.CreateModel(
            name="Approval",
            fields=[
                ("approval_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="approvals",
                        to="services.tender",
                    ),
                ),
            ],
            options={
                "db_table": "approvals",
            },
        ),
        migrations.CreateModel(
            name="TenderManagerAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="manager_assignments_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tender_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="services.tender",
                    ),
                ),
            ],
            options={
                "db_table": "tender_manager_assignments",
                "unique_together": {("tender", "manager")},
            },
        ),
        migrations.AddField(
            model_name="tender",
            name="assigned_to",
            field=models.ManyToManyField(
                blank=True,
                related_name="assigned_tenders",
                through="services.TenderManagerAssignment",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="TenderTimeline",
            fields=[
                ("timeline_id", models.AutoField(primary_key=True, serialize=False)),
                ("submission_start", models.DateTimeField(blank=True, null=True)),
                ("submission_end", models.DateTimeField(blank=True, null=True)),
                ("evaluation_start", models.DateTimeField(blank=True, null=True)),
                ("evaluation_end", models.DateTimeField(blank=True, null=True)),
                ("award_date", models.DateTimeField(blank=True, null=True)),
                ("project_start_date", models.DateTimeField(blank=True, null=True)),
                ("project_end_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tender",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timeline",
                        to="services.tender",
                    ),
                ),
            ],
            options={
                "db_table": "tender_timelines",
            },
        ),
        migrations.CreateModel(
            name="Token",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "tokens",
            },
        ),
    ]
